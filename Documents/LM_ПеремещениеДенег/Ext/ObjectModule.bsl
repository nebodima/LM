
Процедура ОбработкаПроведения(Отказ, Режим)
	
	LMНастроки = РегистрыСведений.LM_Настройки.ПолучитьПоследнее(ТекущаяДата());
	Если LMНастроки.Свойство("ДатаЗапретаРедактирования") Тогда
		
		ДатаЗапрета = LMНастроки.ДатаЗапретаРедактированияния;
		ТолькоНеделя = LMНастроки.ДатаЗапретаРедактированияНеделяеля;
		Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
			Если Дата <= ДатаЗапрета	Тогда
				Отказ = Истина;
				Сообщить("Запрещено изменение документов ранее " +ДатаЗапрета);
				Возврат;
			КонецЕсли; 				
		КонецЕсли; 
		
		//Запрещено редактировать документы в закрытом периоде для Менеджеров
		Если ТолькоНеделя и РольДоступна("LM_Менеджер") и НЕ РольДоступна("ПолныеПрава")Тогда
			Отказ = Истина;
			Сообщить("Запрещено изменение документов ранее " +НачалоДня(НачалоДня(ТекущаяДата())-604800)+ " для Менеджеров");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	

	Если СделатьДвиженияПоВзаиморасчетам Тогда
		
		Если НЕ ЗначениеЗаполнено(Клиент) Тогда
			Отказ = Истина;
			Сообщить("Не выбран клиент!");
		КонецЕсли;
		
		Если Сумма = 0 Тогда
			Отказ = Истина;
			Сообщить("Укажите сумму!");
		КонецЕсли;
		
		
		Структ = ПолучитьСтруктуруОстатков();
		Если Структ.СуммаОстаток < Сумма Тогда
			Отказ = Истина;
			Сообщить("Невозможно переместить деньги, потому что на остатках = " +Структ.СуммаОстаток+ "; по отбору Клиент = " +Клиент.Ссылка + "; ПредметОбучения = " +ПредметОбученияОтправитель+ "; на дату: " +Дата);
		КонецЕсли;
		
		// регистр СписанияСуммЗаУроки Расход
		Движения.LM_СписанияСуммЗаУроки.Записывать = Истина;
		Движение = Движения.LM_СписанияСуммЗаУроки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период 	 = Дата;
		Движение.Клиент 	 = Клиент;
		Движение.Сумма 		 = Сумма;
		Движение.ПредметОбучения = ПредметОбученияОтправитель;
		Движение.Организация = Организация;
		
		// регистр СписанияСуммЗаУроки Приход
		Движения.LM_СписанияСуммЗаУроки.Записывать = Истина;
		Движение = Движения.LM_СписанияСуммЗаУроки.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период 	 = Дата;
		Движение.Клиент 	 = Клиент;
		Движение.Сумма 		 = Сумма;
		Движение.ПредметОбучения = ПредметОбученияПолучатель;
		Движение.Организация = Организация;
		
	Иначе
		
		// регистр Касса Расход
		Движения.LM_Касса.Записывать = Истина;
		Движение = Движения.LM_Касса.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период 	 = Дата;
		Движение.Клиент 	 = Клиент;
		Движение.Сумма 		 = Сумма;
		Движение.Касса		 = КассаОтправитель;
		Движение.СтатьяЗатрат= СтатьяЗатрат;
		Движение.ВидОперации = Перечисления.LM_ВидыОпераций.ВнутренняяКасса;
		Движение.Организация = Организация;
			
		// регистр Касса Приход
		Движения.LM_Касса.Записывать = Истина;
		Движение = Движения.LM_Касса.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период 	 = Дата;
		Движение.Клиент 	 = Клиент;
		Движение.Сумма 		 = Сумма;
		Движение.Касса		 = КассаПолучатель;
		Движение.СтатьяЗатрат= СтатьяЗатрат;
		Движение.ВидОперации = Перечисления.LM_ВидыОпераций.ВнутренняяКасса;
		Движение.Организация = Организация;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.АвторДокумента) Тогда
		ЭтотОбъект.АвторДокумента = ПользователиКлиентСервер.ТекущийПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВидОперации) Тогда
		Если СделатьДвиженияПоВзаиморасчетам Тогда
			ЭтотОбъект.ВидОперации = Перечисления.LM_ВидыОпераций.КассаУченики;
		Иначе
			ЭтотОбъект.ВидОперации = Перечисления.LM_ВидыОпераций.ВнутренняяКасса;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруОстатков()
	
	Структ = Новый Структура;
	
	Если ЗначениеЗаполнено(ПредметОбученияОтправитель) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписанияСуммЗаУрокиОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.LM_СписанияСуммЗаУроки.Остатки(, ) КАК СписанияСуммЗаУрокиОстатки
		|ГДЕ
		|	СписанияСуммЗаУрокиОстатки.Клиент = &Клиент
		|	И СписанияСуммЗаУрокиОстатки.ПредметОбучения = &ПредметОбучения";
		Запрос.УстановитьПараметр("ПредметОбучения", ПредметОбученияОтправитель);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписанияСуммЗаУрокиОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.LM_СписанияСуммЗаУроки.Остатки(, ) КАК СписанияСуммЗаУрокиОстатки
		|ГДЕ
		|	СписанияСуммЗаУрокиОстатки.Клиент = &Клиент";	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Структ.Вставить("СуммаОстаток",ВыборкаДетальныеЗаписи.СуммаОстаток);		
		КонецЦикла;
	Иначе
		Структ.Вставить("СуммаОстаток",0);
	КонецЕсли;
	
	Возврат Структ;
	
КонецФункции

Процедура ПриКопировании(ОбъектКопирования)
	 АвторДокумента = Неопределено;
	 Комментарий    = Неопределено;
КонецПроцедуры

