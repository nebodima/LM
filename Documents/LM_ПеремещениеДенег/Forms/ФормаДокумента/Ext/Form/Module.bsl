
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект)
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.СделатьДвиженияПоВзаиморасчетам Тогда
		Элементы.ГруппаКасса.Видимость = Ложь;
		Элементы.ГруппаВзаиморасчеты.Видимость = Истина;
	Иначе
		Элементы.ГруппаКасса.Видимость = Истина;
		Элементы.ГруппаВзаиморасчеты.Видимость = Ложь;
	КонецЕсли;
	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации";	
	Если Запрос.Выполнить().Выгрузить().Количество() = 0 Тогда
		Элементы.Организация.Видимость = Ложь;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьЗначенияСвойств(Объект,Параметры.ЗначенияЗаполнения);
		Если ЗначениеЗаполнено(Объект.Клиент) Тогда
			Объект.СделатьДвиженияПоВзаиморасчетам = Истина;	
		КонецЕсли;		
	КонецЕсли;	
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	//ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

КонецПроцедуры

&НаКлиенте
Процедура СделатьДвиженияПоВзаиморасчетамПриИзменении(Элемент)
	
	Если Объект.СделатьДвиженияПоВзаиморасчетам Тогда
		Элементы.ГруппаКасса.Видимость = Ложь;
		Элементы.ГруппаВзаиморасчеты.Видимость = Истина;
	Иначе
		Элементы.ГруппаКасса.Видимость = Истина;
		Элементы.ГруппаВзаиморасчеты.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	Объект.Сумма = РассчитатьЗадолженностьНаСервере();
КонецПроцедуры

&НаСервере
Функция РассчитатьЗадолженностьНаСервере()
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписанияСуммЗаУрокиОстатки.СуммаОстаток КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.LM_СписанияСуммЗаУроки.Остатки КАК СписанияСуммЗаУрокиОстатки
		|ГДЕ
		|	СписанияСуммЗаУрокиОстатки.Клиент = &Клиент
		|	И СписанияСуммЗаУрокиОстатки.ПредметОбучения = &ПредметОбучения";	
		Запрос.УстановитьПараметр("Клиент", Объект.Клиент);
		Запрос.УстановитьПараметр("ПредметОбучения", Объект.ПредметОбученияОтправитель);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.СуммаОстаток <=0 Тогда
			Возврат 0;
		Иначе
			Возврат ВыборкаДетальныеЗаписи.СуммаОстаток;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

&НаСервере
Функция ОткрытьВзаиморасчетыНаСервере()
	
	КомпоновщикНастроек = Отчеты.LM_Взаиморасчеты.Создать().КомпоновщикНастроек; 
	Настройки 			= КомпоновщикНастроек.Настройки; 
	
	ЭлементНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")); 
	//ЭлементНастройки.Значение.ДатаНачала    = '00010101';//НачалоГода(ТекущаяДата());
	//ЭлементНастройки.Значение.ДатаОкончания = '00010101';//КонецГода(ТекущаяДата());
	Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда 
			//ПользовательскийПараметр.Значение = ЭлементНастройки.Значение;
			ПользовательскийПараметр.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	ОтборУченик = Новый ПолеКомпоновкиДанных("Клиент");
	ОтборПредметОбучения = Новый ПолеКомпоновкиДанных("ПредметОбучения");
	
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл 
		Если ЭлементНастройки.ЛевоеЗначение = ОтборУченик Тогда 
			ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементНастройки.ПравоеЗначение = Объект.Клиент; 
			ЭлементНастройки.Использование = Истина; 
			Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
				ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
				Если ТипЗнч(ПользовательскийПараметр) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
					ПользовательскийПараметр.ВидСравнения = ЭлементНастройки.ВидСравнения; 
					ПользовательскийПараметр.ПравоеЗначение = ЭлементНастройки.ПравоеЗначение; 
					ПользовательскийПараметр.Использование = ЭлементНастройки.Использование; 
				КонецЕсли; 
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.ПредметОбученияОтправитель) Тогда
			Если ЭлементНастройки.ЛевоеЗначение = ОтборПредметОбучения Тогда 
				ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
				ЭлементНастройки.ПравоеЗначение = Объект.ПредметОбученияОтправитель; 
				ЭлементНастройки.Использование = Истина; 
				Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
					ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
					Если ТипЗнч(ПользовательскийПараметр) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
						ПользовательскийПараметр.ВидСравнения = ЭлементНастройки.ВидСравнения; 
						ПользовательскийПараметр.ПравоеЗначение = ЭлементНастройки.ПравоеЗначение; 
						ПользовательскийПараметр.Использование = ЭлементНастройки.Использование; 
					КонецЕсли; 
				КонецЕсли;
				Прервать; 
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	ПараметрыОткрытия = Новый Структура(); 
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина); 
	ПараметрыОткрытия.Вставить("Вариант", Настройки); 
	ПараметрыОткрытия.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки); 
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьВзаиморасчеты(Команда)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда		
		ПараметрыОткрытия = ОткрытьВзаиморасчетыНаСервере();
		ОткрытьФорму("Отчет.LM_Взаиморасчеты.Форма", ПараметрыОткрытия, ЭтаФорма);
	Иначе
		ОткрытьФорму("Отчет.LM_Взаиморасчеты.Форма", , ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

