Процедура ПриДобавленииПодсистемы(Описание) Экспорт
    Описание.Имя = "LessonsManagement";
    Описание.Версия = "2.3.3.66";
    // Требуется библиотека стандартных подсистем.
    Описание.ТребуемыеПодсистемы.Добавить("СтандартныеПодсистемы");
КонецПроцедуры
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Если Найти(Метаданные.Имя,"LessonsManagement")>0 Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	LM_Настройки.Период КАК Период
		|ИЗ
		|	РегистрСведений.LM_Настройки КАК LM_Настройки";   	
		ЕстьНастройки = Запрос.Выполнить().Выгрузить().Количество()>0;
		
		Если Не ЕстьНастройки Тогда //Не расширение		 
			НоваяЗапись = РегистрыСведений.LM_Настройки.СоздатьМенеджерЗаписи();
			НоваяЗапись.Период 		= НачалоМесяца(ТекущаяДата());
			НоваяЗапись.Организация 	= Справочники.Организации.НашаОрганизация;
			НоваяЗапись.Касса 			= Справочники.Кассы.НашаКасса;
			НоваяЗапись.Записать();   
			//НоваяЗапись.Записать(Истина замещать, если уже есть запись с такими же измерениями и таким же периодом);
		КонецЕсли;
	КонецЕсли;  
	
КонецПроцедуры
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
КонецПроцедуры
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
	Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
КонецПроцедуры
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
КонецПроцедуры
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
КонецПроцедуры
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
КонецПроцедуры 
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
КонецПроцедуры