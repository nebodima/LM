&НаСервере
Функция ПолучитьТЗОстатков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КассаОстаткиИОбороты.Касса КАК Касса,
	|	КассаОстаткиИОбороты.Регистратор КАК Регистратор,
	|	КассаОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	КассаОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	КассаОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	|	КассаОстаткиИОбороты.СуммаРасход КАК СуммаРасход
	|ИЗ
	|	РегистрНакопления.LM_Касса.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Регистратор, Движения, Касса В (&Касса)) КАК КассаОстаткиИОбороты
	|
	|УПОРЯДОЧИТЬ ПО
	|	Касса,
	|	Регистратор
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Касса", Касса);
	
	Если Не ЗначениеЗаполнено(Касса) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,", Касса В (&Касса)","");
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции 

&НаСервере
Функция ПолучитьИтогоТЗОстатков()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КассаОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	|	КассаОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
	|	КассаОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	|	КассаОстаткиИОбороты.СуммаРасход КАК СуммаРасход
	|ИЗ
	|	РегистрНакопления.LM_Касса.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, , , Касса В (&Касса)) КАК КассаОстаткиИОбороты";
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Касса", Касса);
	
	Если Не ЗначениеЗаполнено(Касса) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,", Касса В (&Касса)","");
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции 


&НаСервере
Процедура СформироватьНаСервере()
	
	LMНастроки = РегистрыСведений.LM_Настройки.ПолучитьПоследнее(ТекущаяДата());
	Если LMНастроки.Свойство("ДатаЗапретаРедактирования") Тогда
		Если НЕ РольДоступна("ПолныеПрава") и РольДоступна("LM_Менеджер") И LMНастроки.ДатаЗапретаРедактированияНеделяеля Тогда
			Если Период.ДатаНачала < НачалоДня(НачалоДня(ТекущаяДата())-604800)Тогда
				Сообщить("Запрещено отображение документов ранее " +НачалоДня(НачалоДня(ТекущаяДата())-604800));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ТабДок = Новый  ТабличныйДокумент;
	Макет   = Отчеты.LM_ВедомостьПоКассеДляМенеджеров.ПолучитьМакет("Макет");
	ОбластьШапка 					= Макет.ПолучитьОбласть("Шапка");
	ОбластьГруппировкаКасса 		= Макет.ПолучитьОбласть("ГруппировкаКасса");
	//ОбластьГруппировкаНаправление 	= Макет.ПолучитьОбласть("ГруппировкаНаправление");
	ОбластьСтрока 					= Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги 					= Макет.ПолучитьОбласть("Итоги");
	
	Остатки			= ПолучитьТЗОстатков();
	ИтогоОстатки	= ПолучитьИтогоТЗОстатков();
	
	ТЗИтогиКасса = Остатки.Скопировать();
	ТЗИтогиКасса.Свернуть("Касса","СуммаНачальныйОстаток, СуммаКонечныйОстаток, СуммаПриход, СуммаРасход");
	ТЗИтогиКасса.Сортировать("Касса");
	
	ОбластьШапка.Параметры.ДатаНачала = Формат(Период.ДатаНачала,"ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаОкончания = Формат(КонецДня(Период.ДатаОкончания),"ДФ=dd.MM.yyyy"); 	
	ТабДок.Вывести(ОбластьШапка,1);	
	
	Если ИтогоОстатки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбластьИтоги.Параметры.Заполнить(ИтогоОстатки[0]);
	ТабДок.Вывести(ОбластьИтоги,2);
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	Для Каждого СтрКассы Из ТЗИтогиКасса Цикл
		
		ОстаткиПоКассе  = РегистрыНакопления.LM_Касса;
		Фильтр   = Новый Структура;
		Фильтр.Вставить("Касса",СтрКассы.Касса);
		ТабОстатковНаНачало = ОстаткиПоКассе.Остатки(Период.ДатаНачала,Фильтр,
		"Касса", "Сумма");
		ТабОстатковНаКонец = ОстаткиПоКассе.Остатки(КонецДня(Период.ДатаОкончания),Фильтр,
		"Касса", "Сумма");
		
		//Вывод заголовка по Кассе		
		НайденнаяСтрока = ТЗИтогиКасса.Найти(СтрКассы.Касса, "Касса");
		ОбластьГруппировкаКасса.Параметры.Заполнить(НайденнаяСтрока);
		Если ТабОстатковНаНачало.Количество()>0 Тогда
			ОбластьГруппировкаКасса.Параметры.СуммаНачальныйОстаток = ТабОстатковНаНачало[0].Сумма;
		Иначе
			ОбластьГруппировкаКасса.Параметры.СуммаНачальныйОстаток = 0;
		КонецЕсли;
		Если ТабОстатковНаКонец.Количество()>0 Тогда
			ОбластьГруппировкаКасса.Параметры.СуммаКонечныйОстаток = ТабОстатковНаКонец.Итог("Сумма");
		Иначе
			ОбластьГруппировкаКасса.Параметры.СуммаКонечныйОстаток = 0;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьГруппировкаКасса,3); 
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Касса", СтрКассы.Касса);
		НайденныеСтроки = Остатки.НайтиСтроки(ПараметрыОтбора);
		
		Сч1 = 0;
		Для Каждого Стр из НайденныеСтроки Цикл
			Сч1 = Сч1 + 1;  					
			ОбластьСтрока.Параметры.Заполнить(Стр);
			ОбластьСтрока.Параметры.НомерСтроки = Сч1;
			ТабДок.Вывести(ОбластьСтрока,4);
		КонецЦикла;			
		
	КонецЦикла;
	ТабДок.ЗакончитьАвтогруппировкуСтрок();

	ТабДок.ОтображатьСетку     = Ложь;
	ТабДок.Защита              = Истина;
	ТабДок.ТолькоПросмотр      = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ФиксацияСверху = 4;
	ТабДок.ФиксацияСлева = 8;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)	
	
	ОтображениеСостояния = Элементы.ТабДок.ОтображениеСостояния;
	ОтображениеСостояния.Видимость                      = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.НеИспользовать;
	ОтображениеСостояния.Картинка                       = БиблиотекаКартинок.ДлительнаяОперация48;
	ОтображениеСостояния.Текст                          = НСтр("ru = 'Отчет формируется...'");
	
	СформироватьНаСервере();
	
	Элементы.ТабДок.ОтображениеСостояния.Видимость      = Ложь;
		
КонецПроцедуры


//&НаСервере
//Процедура ВывестиДанные(КолУч,КолУр,СуммУр,КолЧасов,ПКО)
//	
//	Для Каждого Стр из КолУч Цикл
//		
//		ТабДок.Область(Сч,1).Текст = ?(ЗначениеЗаполнено(Стр.ПредметОбучения),Стр.ПредметОбучения,"<не выбран>");
//		ТабДок.Область(Сч,1).Расшифровка = "ТекущийПериод,ОтборПоУченикам,ПредметОбучения," +?(ЗначениеЗаполнено(Стр.ПредметОбучения),Строка(Стр.ПредметОбучения),"<не выбран>");
//		
//		Отбор = Новый Структура();
//		Отбор.Вставить("ПредметОбучения",Стр.ПредметОбучения);
//		Строки1 = КолУр.НайтиСтроки(Отбор);
//		ИтогоСуммаПКО 	= ИтогоСуммаПКО;
//		
//	КонецЦикла;	
//	
//КонецПроцедуры

//&НаСервере
//Функция ТабДокОбработкаРасшифровкиНаСервере(Расшифровка)
	
	//ТабДокРасшифровка = Новый ТабличныйДокумент;
	//ТабДокРасшифровка.Защита = Ложь;
	//ТабДокРасшифровка.ТолькоПросмотр = Истина;
	//ТабДокРасшифровка.ОтображатьСетку = Истина;
	//	
	//	ВыбПредметОбученияСтрокой = Сред(Расшифровка,СтрНайти(Расшифровка,",",НаправлениеПоиска.СКонца)+1);
	//	Если ВыбПредметОбученияСтрокой <> "<не выбран>" Тогда
	//		ВыбПредметОбучения = Справочники.ПредметыОбучения.НайтиПоНаименованию(ВыбПредметОбученияСтрокой);
	//	Иначе
	//		ВыбПредметОбучения = Справочники.ПредметыОбучения.ПустаяСсылка();
	//	КонецЕсли; 			
	//	
	//	Для Каждого Стр из Строки Цикл
	//		
	//		//Строки
	//		ТабДокРасшифровка.Область(Сч2,3).Текст 			= Стр.Клиент;
	//		ТабДокРасшифровка.Область(Сч2,3).Расшифровка 	= Стр.Клиент;
	//		
	//		ИтогоСуммаПКО 	= ИтогоСуммаПКО + Стр.СуммаПКО;
	//		
	//	КонецЦикла;
	//
	//Возврат ТабДокРасшифровка;	
	
//КонецФункции

//&НаКлиенте
//Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	//ТабДокРасшифровка = ТабДокОбработкаРасшифровкиНаСервере(Расшифровка);
	//ТабДокРасшифровка.Показать("Расшифровка по " +Расшифровка);	
	
//КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ РольДоступна("ПолныеПрава") и РольДоступна("Менеджер") И Константы.LM_ДатаЗапретаРедактированияНеделяеля.Получить() Тогда
		Период.ДатаНачала = НачалоДня(НачалоДня(ТекущаяДата())-604800);
	КонецЕсли;
	
КонецПроцедуры


