
&НаКлиенте
Процедура НайтиУроки(Команда)
	НайтиУрокиНаСервере();
КонецПроцедуры

Процедура НайтиУрокиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Уроки.Ссылка КАК Урок,
		|	Уроки.НомерСтроки КАК НомерСтроки,
		|	Уроки.СписатьОплату КАК СписатьОплату,
		|	Уроки.Явка КАК Явка,
		|	Уроки.Ученик КАК Ученик,
		|	Уроки.Абонемент КАК Абонемент,
		|	Уроки.Тариф КАК Тариф,
		|	Уроки.Скидка КАК Скидка,
		|	Уроки.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	ЛОЖЬ КАК ЯвкаИзменено,
		|	ЛОЖЬ КАК СписатьОплатуИзменено,
		|	ЛОЖЬ КАК УдалитьУченика,
		|	"""" КАК Описание,
		|	Уроки.Ссылка.ПредметОбучения КАК ПредметОбучения
		|ИЗ
		|	Документ.LM_Урок.Ученики КАК Уроки
		|ГДЕ
		|	Уроки.Ссылка.Проведен
		|	И Уроки.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Уроки.Ученик В ИЕРАРХИИ(&Ученики)
		|	И Уроки.Ссылка.ПредметОбучения = &ПредметОбучения
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки)
		|ПО
		|	Урок";
	
	Запрос.Параметры.Вставить("ДатаНачала",Период.ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания",Период.ДатаОкончания);
	
	Если Ученики.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Уроки.Ученик В ИЕРАРХИИ(&Ученики)","");
	Иначе 		
		Запрос.Параметры.Вставить("Ученики",Ученики);
	КонецЕсли;
	
	Если ПредметОбучения.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Уроки.Ссылка.ПредметОбучения = &ПредметОбучения","");
	Иначе 		
		Запрос.Параметры.Вставить("ПредметОбучения",ПредметОбучения);
	КонецЕсли;
	
	ПромДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(ПромДерево, "ДеревоУроков");
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоУроковСписатьОплатуПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоУроков.ТекущиеДанные;
	
	Элементы.ДеревоУроков.ТекущиеДанные.СписатьОплатуИзменено = НЕ Элементы.ДеревоУроков.ТекущиеДанные.СписатьОплатуИзменено;
	
	Если ТекДанные.Ученик.Пустая() Тогда // Это вышестоящая группа
		ОбойтиДеревоНаСервере(ТекДанные.СписатьОплату, Неопределено, ТекДанные.Урок);
	КонецЕсли;
	
	ОбновитьВидимостьДерева();
	
КонецПроцедуры 

&НаКлиенте
Процедура ДеревоУроковЯвкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоУроков.ТекущиеДанные;
	
	ТекДанные.ЯвкаИзменено = НЕ ТекДанные.ЯвкаИзменено;
	
	Если ТекДанные.Ученик.Пустая() Тогда // Это вышестоящая группа
		ОбойтиДеревоНаСервере(Неопределено, ТекДанные.Явка, ТекДанные.Урок);
	КонецЕсли;
	
	ОбновитьВидимостьДерева();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьДерева()
	
	ЭлементыДерева = ДеревоУроков.ПолучитьЭлементы();
	Для каждого элемента из  ЭлементыДерева цикл
		Если элемента.ЯвкаИзменено или элемента.СписатьОплатуИзменено или элемента.Описание <> "" Тогда
			элементы.ДеревоУроков.Развернуть(элемента.ПолучитьИдентификатор(),Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


Процедура ОбойтиДеревоНаСервере(СписатьОплату, Явка, Урок)
	
	Древо = РеквизитФормыВЗначение("ДеревоУроков");
	
	Отбор = Новый Структура("Урок",Урок);
	НайденныеСТроки = Древо.Строки.НайтиСтроки(Отбор);
	
	Для Каждого Стр Из НайденныеСТроки Цикл
		
		Для Каждого Стр2 из Стр.Строки Цикл
			
			Если СписатьОплату <> Неопределено ТОгда
				Стр2.СписатьОплату = СписатьОплату;
			КонецЕсли;
			
			Если Явка <> Неопределено ТОгда
				Стр2.Явка = Явка;
			КонецЕсли;
			
		КонецЦикла; 				
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Древо, "ДеревоУроков");
	
КонецПроцедуры



&НаКлиенте
Процедура Применить(Команда)
	ПрименитьИзменения();
	Элементы.ДеревоУроков.Обновить();
	ОбновитьВидимостьДерева();
КонецПроцедуры
Процедура ПрименитьИзменения()
	
	Древо = РеквизитФормыВЗначение("ДеревоУроков");
	
	Для Каждого Стр Из Древо.Строки Цикл // Верхний уровень Урок
		
		Изменено = Ложь;
		
		Для Каждого Стр2 из Стр.Строки Цикл // Строки учеников
			
			Если (Стр2.СписатьОплатуИзменено или Стр2.ЯвкаИзменено) и НЕ Изменено Тогда
				Об = Стр2.Урок.ПолучитьОбъект();				
			КонецЕсли;    			
			
			Если Стр2.СписатьОплатуИзменено Тогда
				Стр2.Описание = ИзменитьУрок(Стр2.Ученик, Об, Стр2.СписатьОплату, Неопределено);
				Стр2.СписатьОплатуИзменено = Ложь;
				Изменено = Истина;
			КонецЕсли;
			
			Если Стр2.ЯвкаИзменено Тогда
				Стр2.Описание = ИзменитьУрок(Стр2.Ученик, Об, Неопределено, Стр2.Явка);
				Стр2.ЯвкаИзменено = Ложь;
				Изменено = Истина;
			КонецЕсли;
						
		КонецЦикла;
		
		Если Изменено Тогда
			Попытка
				Об.Записать(РежимЗаписиДокумента.Запись);
				Стр.Описание = "Изменено " +ТекущаяДата();
			Исключение
				Сообщить("Не удалось записать " +Об.Ссылка+ " " +ОписаниеОшибки());
			КонецПопытки; 			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Древо, "ДеревоУроков");
	
КонецПроцедуры
Функция ИзменитьУрок(Ученик, ОбъектУрок, СписатьОплату, Явка)
	
	Для Каждого Стр из ОбъектУрок.Ученики Цикл
		
		Если Стр.Ученик = Ученик Тогда
			      			
			Если СписатьОплату <> Неопределено Тогда
				Стр.СписатьОплату = СписатьОплату;
			КонецЕсли;
			
			Если Явка <> Неопределено Тогда
				Стр.Явка = Явка;
			КонецЕсли;
			
			Возврат "Успешно изменено! " +?(СписатьОплату<>Неопределено,"СписатьОплату="+СписатьОплату+ " ","")
			+?(Явка<>Неопределено,"Явка="+Явка,"")+ " " +ТекущаяДата();
			
		КонецЕсли;		
		
	КонецЦикла;
		
	Возврат "";
	
КонецФункции




&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
		Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСписатьОплату(Команда)
	ОбойтиДеревоНаСервере2(Истина, Неопределено);	
	ОбновитьВидимостьДерева();
КонецПроцедуры
Процедура ОбойтиДеревоНаСервере2(СписатьОплату, Явка)
	
	Древо = РеквизитФормыВЗначение("ДеревоУроков");
	
	Для Каждого Стр Из Древо.Строки Цикл
		
		//Если СписатьОплату <> Неопределено ТОгда
		//	Стр.СписатьОплату = СписатьОплату;
		//	Стр.СписатьОплатуИзменено = Истина;
		//КонецЕсли;
		//
		//Если Явка <> Неопределено ТОгда
		//	Стр.Явка = Явка;
		//	Стр.ЯвкаИзменено = Истина;
		//КонецЕсли;
		ЯвкаИзменено = Ложь;
		ОплатаИзменено = Ложь;
			
		Для Каждого Стр2 из Стр.Строки Цикл
			
			Если СписатьОплату <> Неопределено и Стр2.СписатьОплату <> СписатьОплату ТОгда
				Стр2.СписатьОплату = СписатьОплату;
				Стр2.СписатьОплатуИзменено = Истина;
				ОплатаИзменено = Истина;
			КонецЕсли;
			
			Если Явка <> Неопределено и Стр2.Явка <> Явка ТОгда
				Стр2.Явка = Явка;
				Стр2.ЯвкаИзменено = Истина;
				ЯвкаИзменено = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЯвкаИзменено Тогда
			Стр.ЯвкаИзменено = Истина;
			
			Если Явка <> Неопределено ТОгда
				Стр.Явка = Явка;
			КонецЕсли;

		КонецЕсли;
		Если ОплатаИзменено Тогда
			Стр.СписатьОплатуИзменено = Истина;
			
			Если СписатьОплату <> Неопределено ТОгда
				Стр.СписатьОплату = СписатьОплату;
			КонецЕсли;

		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Древо, "ДеревоУроков");
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСписатьОплату(Команда)
	ОбойтиДеревоНаСервере2(Ложь, Неопределено);	
	ОбновитьВидимостьДерева();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЯвки(Команда)
	ОбойтиДеревоНаСервере2(Неопределено, Истина);	
	ОбновитьВидимостьДерева();
КонецПроцедуры

&НаКлиенте
Процедура СнятьЯвки(Команда)
	ОбойтиДеревоНаСервере2(Неопределено, Ложь);	
	ОбновитьВидимостьДерева();
КонецПроцедуры


