
&НаКлиенте
Процедура НайтиУроки(Команда)
	НайтиУрокиНаСервере();
КонецПроцедуры
Процедура НайтиУрокиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Уроки.Ссылка КАК Урок,
		|	Уроки.НомерСтроки КАК НомерСтроки,
		|	Уроки.СписатьОплату КАК СписатьОплату,
		|	Уроки.Явка КАК Явка,
		|	Уроки.Ученик КАК Ученик,
		|	Уроки.Абонемент КАК Абонемент,
		|	Уроки.Тариф КАК Тариф,
		|	Уроки.Скидка КАК Скидка,
		|	Уроки.ДисконтнаяКарта КАК ДисконтнаяКарта,
		|	Уроки.Явка КАК ЯвкаИзменено,
		|	Уроки.СписатьОплату КАК СписатьОплатуИзменено,
		|	ЛОЖЬ КАК УдалитьУченика,
		|	"""" КАК Описание
		|ИЗ
		|	Документ.LM_Урок.Ученики КАК Уроки
		|ГДЕ
		|	Уроки.Ссылка.Проведен
		|	И Уроки.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Уроки.Ученик В ИЕРАРХИИ(&Ученики)
		|	И Уроки.Ссылка.ПредметОбучения = &ПредметОбучения
		|ИТОГИ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НомерСтроки)
		|ПО
		|	Урок";
	
	Запрос.Параметры.Вставить("ДатаНачала",Период.ДатаНачала);
	Запрос.Параметры.Вставить("ДатаОкончания",Период.ДатаОкончания);
	
	Если Ученики.Количество() = 0 Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Уроки.Ученик В ИЕРАРХИИ(&Ученики)","");
	Иначе 		
		Запрос.Параметры.Вставить("Ученики",Ученики);
	КонецЕсли;
	
	Если ПредметОбучения.Пустая() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И Уроки.Ссылка.ПредметОбучения = &ПредметОбучения","");
	Иначе 		
		Запрос.Параметры.Вставить("ПредметОбучения",ПредметОбучения);
	КонецЕсли;
	
	ПромДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	ЗначениеВРеквизитФормы(ПромДерево, "ДеревоУроков");
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоУроковСписатьОплатуПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоУроков.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекДанные.Ученик) Тогда // Это корень
		 ИзменитьКорень(ТекДанные.Урок, Истина);
	КонецЕсли;
	
КонецПроцедуры 
&НаКлиенте
Процедура ИзменитьКорень(Урок, СписатьОплату)
	
	ЭлементыДерева = ДеревоУроков.ПолучитьЭлементы();
	Для Каждого КорнЭл из ЭлементыДерева Цикл
		
		Если КорнЭл.Урок <> Урок Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементыСтрокиДерева = КорнЭл.ПолучитьЭлементы();
		Для Каждого ЭлСтроки из  ЭлементыСтрокиДерева цикл
			Если СписатьОплату Тогда
				ЭлСтроки.СписатьОплату = КорнЭл.СписатьОплату;
			Иначе
				ЭлСтроки.Явка = КорнЭл.Явка;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоУроковЯвкаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоУроков.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекДанные.Ученик) Тогда // Это корень
		ИзменитьКорень(ТекДанные.Урок, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтотОбъект, Параметры);
	ПоказатьВопрос(Оповещение, "Изменить уроки?", Режим, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	Иначе
		ПрименитьИзменения();
		//Элементы.ДеревоУроков.Обновить();
		НайтиУрокиНаСервере();
	КонецЕсли;
КонецПроцедуры    
	
Процедура ПрименитьИзменения()
	
	Древо = РеквизитФормыВЗначение("ДеревоУроков");
	
	Для Каждого Стр Из Древо.Строки Цикл // Верхний уровень Урок
		
		Изменено = Ложь;
		
		Для Каждого Стр2 из Стр.Строки Цикл // Строки учеников
			
			Если (Стр2.СписатьОплатуИзменено или Стр2.ЯвкаИзменено) и НЕ Изменено Тогда
				Об = Стр2.Урок.ПолучитьОбъект();				
			КонецЕсли;    			
			
			Если Стр2.СписатьОплатуИзменено Тогда
				Стр2.Описание = ИзменитьУрок(Стр2.Ученик, Об, Стр2.СписатьОплату, Неопределено);
				Стр2.СписатьОплатуИзменено = Ложь;
				Изменено = Истина;
			КонецЕсли;
			
			Если Стр2.ЯвкаИзменено Тогда
				Стр2.Описание = ИзменитьУрок(Стр2.Ученик, Об, Неопределено, Стр2.Явка);
				Стр2.ЯвкаИзменено = Ложь;
				Изменено = Истина;
			КонецЕсли;
						
		КонецЦикла;
		
		Если Изменено Тогда
			Попытка
				Об.Записать(РежимЗаписиДокумента.Запись);
				Стр.Описание = "Изменено " +ТекущаяДата();
			Исключение
				Сообщить("Не удалось записать " +Об.Ссылка+ " " +ОписаниеОшибки());
			КонецПопытки; 			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Древо, "ДеревоУроков");
	
КонецПроцедуры
Функция ИзменитьУрок(Ученик, ОбъектУрок, СписатьОплату, Явка)
	
	Для Каждого Стр из ОбъектУрок.Ученики Цикл
		
		Если Стр.Ученик = Ученик Тогда
			      			
			Если СписатьОплату <> Неопределено Тогда
				Стр.СписатьОплату = СписатьОплату;
			КонецЕсли;
			
			Если Явка <> Неопределено Тогда
				Стр.Явка = Явка;
			КонецЕсли;
			
			Возврат "Успешно изменено! " +?(СписатьОплату<>Неопределено,"СписатьОплату="+СписатьОплату+ " ","")
			+?(Явка<>Неопределено,"Явка="+Явка,"")+ " " +ТекущаяДата();
			
		КонецЕсли;		
		
	КонецЦикла;
		
	Возврат "";
	
КонецФункции


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
		Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСписатьОплату(Команда)
	ОбойтиДеревоНаСервере2(Истина, Неопределено);	
КонецПроцедуры
Процедура ОбойтиДеревоНаСервере2(СписатьОплату, Явка)
	
	ЭлементыДерева = ДеревоУроков.ПолучитьЭлементы();
	Для Каждого элемента из  ЭлементыДерева цикл
		
		
		Если СписатьОплату <> Неопределено ТОгда
			элемента.СписатьОплату = СписатьОплату;
		КонецЕсли;		
		Если Явка <> Неопределено ТОгда
			элемента.Явка = Явка;
		КонецЕсли;

		
		ЭлементыСтрокиДерева = элемента.ПолучитьЭлементы();
		Для Каждого ЭлСтроки из  ЭлементыСтрокиДерева цикл
			
			Если СписатьОплату <> Неопределено ТОгда
				ЭлСтроки.СписатьОплату = СписатьОплату;
			КонецЕсли;  			
			Если Явка <> Неопределено ТОгда
				ЭлСтроки.Явка = Явка;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьСписатьОплату(Команда)
	ОбойтиДеревоНаСервере2(Ложь, Неопределено);	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЯвки(Команда)
	ОбойтиДеревоНаСервере2(Неопределено, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура СнятьЯвки(Команда)
	ОбойтиДеревоНаСервере2(Неопределено, Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ПериодПриИзмененииНаСервере(); 		
КонецПроцедуры

Процедура ПериодПриИзмененииНаСервере()
	Древо = РеквизитФормыВЗначение("ДеревоУроков");
	Древо.Строки.Очистить();
	ЗначениеВРеквизитФормы(Древо, "ДеревоУроков");
КонецПроцедуры
