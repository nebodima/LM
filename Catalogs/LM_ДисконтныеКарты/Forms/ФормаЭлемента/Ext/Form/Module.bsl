
&НаКлиенте
Процедура КодКартыШтрихкодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	
	Текст = СокрЛП(Текст);
	Объект.КодКартыШтрихкод = Текст;
	Объект.Наименование = ""+Объект.Владелец + " [" +Текст+ "]";
	Элементы.ДекорацияКоличество.Заголовок = "" +СтрДлина(Текст)+ " зн.";
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если СтрДлина(Объект.КодКартыШтрихкод) > 0 Тогда 
		Элементы.ДекорацияКоличество.Заголовок = "" +СтрДлина(Объект.КодКартыШтрихкод)+ " зн.";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОстатокБонусов = ПолучитьОстатокБонусов();
	КонецЕсли;
	
	ОпределистьСтатусКарты();
	
	ЭлементОтбора = Документы.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДисконтнаяКарта");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
	ЭлементОтбора = Документы.Отбор.Элементы[0];
	ЭлементОтбора.Использование = Истина;
	Элементы.Документы.Обновить();

КонецПроцедуры

Функция ПолучитьОстатокБонусов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДвижениеДисконтныхКартОстатки.СуммаБонусовОстаток КАК СуммаБонусовОстаток
	|ИЗ
	|	РегистрНакопления.LM_ДвижениеДисконтныхКарт.Остатки КАК ДвижениеДисконтныхКартОстатки
	|ГДЕ
	|	ДвижениеДисконтныхКартОстатки.ДисконтнаяКарта = &ДисконтнаяКарта";	
	Запрос.УстановитьПараметр("ДисконтнаяКарта", Объект.Ссылка); 	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СуммаБонусовОстаток;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

Процедура ОпределистьСтатусКарты()
	Если ЗначениеЗаполнено(Объект.ДатаОкончанияДействия) и КонецДня(Объект.ДатаОкончанияДействия) <= ТекущаяДата() Тогда
		Элементы.ДекорацияНЕДЕЙСТВИТЕЛЬНА.Видимость = Истина;
		Элементы.ДекорацияДействует.Видимость = Ложь;
	Иначе
		Элементы.ДекорацияНЕДЕЙСТВИТЕЛЬНА.Видимость = Ложь;
		Элементы.ДекорацияДействует.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияДействияПриИзменении(Элемент)
	ОпределистьСтатусКарты();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(Объект.Наименование) Тогда 
		Текст = СокрЛП(Текст);
		Объект.КодКартыШтрихкод = Текст;
		Объект.Наименование = ""+Объект.Владелец + ?(ЗначениеЗаполнено(Объект.КодКартыШтрихкод)," [" +Текст+ "]","");
		Элементы.ДекорацияКоличество.Заголовок = "" +СтрДлина(Текст)+ " зн.";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачалаДействия) Тогда 
		Объект.ДатаНачалаДействия = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстатокБонусовНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыОткрытия = ОткрытьДвиженяПоДисконтнойКартеНаСервере(Объект.Ссылка);
	ОткрытьФорму("Отчет.LM_ОтчетПоДисконтнымКартам.Форма", ПараметрыОткрытия, ЭтаФорма); 
КонецПроцедуры

&НаСервере
Функция ОткрытьДвиженяПоДисконтнойКартеНаСервере(Значение)
	
	КомпоновщикНастроек = Отчеты.LM_ОтчетПоДисконтнымКартам.Создать().КомпоновщикНастроек; 
	Настройки 			= КомпоновщикНастроек.Настройки; 
	
	ЭлементНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")); 
	//ЭлементНастройки.Значение.ДатаНачала    = '00010101';//НачалоГода(ТекущаяДата());
	//ЭлементНастройки.Значение.ДатаОкончания = '00010101';//КонецГода(ТекущаяДата());
	Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда 
			//ПользовательскийПараметр.Значение = ЭлементНастройки.Значение;
			ПользовательскийПараметр.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	ОтборДисконтнаяКарта = Новый ПолеКомпоновкиДанных("ДисконтнаяКарта");
	//ОтборПериод = Новый ПолеКомпоновкиДанных("Период");
	
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл 
		Если ЭлементНастройки.ЛевоеЗначение = ОтборДисконтнаяКарта Тогда 
			ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементНастройки.ПравоеЗначение = Значение; 
			ЭлементНастройки.Использование = Истина; 
			Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
				ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
				Если ТипЗнч(ПользовательскийПараметр) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
					ПользовательскийПараметр.ВидСравнения = ЭлементНастройки.ВидСравнения; 
					ПользовательскийПараметр.ПравоеЗначение = ЭлементНастройки.ПравоеЗначение; 
					ПользовательскийПараметр.Использование = ЭлементНастройки.Использование; 
				КонецЕсли; 
			КонецЕсли;
			Прервать; 
		КонецЕсли; 
	КонецЦикла; 
	
	ПараметрыОткрытия = Новый Структура(); 
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина); 
	ПараметрыОткрытия.Вставить("Вариант", Настройки); 
	ПараметрыОткрытия.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки); 
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

