&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПоказатьКартинки();		
		
	Иначе
		Попытка
			Объект.Родитель = Справочники.LM_ФизЛица[Параметры.Ключ2.Группа];
		Исключение
		КонецПопытки;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Фото) и ЗначениеЗаполнено(Фото) Тогда
		НовыйФайлКартинки = Справочники.LM_Фото.СоздатьЭлемент();
		НовыйФайлКартинки.Файл = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Фото));
		НовыйФайлКартинки.Наименование = ТекущийОбъект.Наименование;
		НовыйФайлКартинки.Записать();
		ТекущийОбъект.Фото = НовыйФайлКартинки.Ссылка;
	КонецЕсли;  
	
КонецПроцедуры

#Region Работа_с_фото
Процедура ПоказатьКартинки()
	
	Если НЕ Объект.Фото.Пустая() Тогда
		Фото = ПоместитьВоВременноеХранилище(Объект.Фото.Файл.Получить());
	Иначе
		Фото = "";
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ВыбратьФото(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОбработатьВыборФайла",ЭтотОбъект);
	НачатьПомещениеФайла(Оповещение,,,Истина,УникальныйИдентификатор);
	
КонецПроцедуры
&НаКлиенте
Процедура ОбработатьВыборФайла(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	Фото = Адрес;
	Объект.Фото = Неопределено;
	
КонецПроцедуры
&НаКлиенте
Процедура ФотоОбъектОчистка(Элемент, СтандартнаяОбработка)
	Фото = Неопределено; 
КонецПроцедуры
&НаКлиенте
Процедура ФотоПриИзменении(Элемент) 	
	ПоказатьКартинки();
КонецПроцедуры
#EndRegion


//Расчет возраста
&НаКлиенте 
Процедура ДатаРожденияПриИзменении(Элемент)
	
	РассчитатьВозраст();
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьВозраст()
	
	Если ЗначениеЗаполнено(Объект.ДатаРождения) Тогда
		//Объект.Возраст = Цел((ТекущаяДата()- Объект.ДатаРождения)/60/60/24/365); //Годы
		
		Объект.Возраст = Год(ТекущаяДата()) - Год(Объект.ДатаРождения) 
                    - ?(Месяц(ТекущаяДата()) < Месяц(Объект.ДатаРождения) 
                        Или Месяц(ТекущаяДата()) = Месяц(Объект.ДатаРождения) И День(ТекущаяДата()) < День(Объект.ДатаРождения), 
                         1, 0);
	Иначе                          
		Объект.Возраст = Неопределено;
	КонецЕсли;
	
КонецПроцедуры
//Конец расчет возраста


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Оповестить(Объект.Ссылка);
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ДекорацияСсылкаHttpНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Http) Тогда
		ПерейтиПоНавигационнойСсылке(Объект.Http);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РодительСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыСтроки = Новый Структура;
	
	Назв = СокрЛП(Элемент.ТекстРедактирования);
	
	Если Найти(Назв," ") > 0 Тогда
		Симв1 = Найти(Назв," ");
		ПараметрыСтроки.Вставить("Наименование",Лев(Назв,Симв1-1));
		Назв = СокрЛП(Сред(Назв,Симв1+1));
	Иначе
		ПараметрыСтроки.Вставить("Наименование",Назв);
		Назв = "";
	КонецЕсли;
	
	ПараметрыСтроки.Вставить("Группа","Родители");
	
	Пар = Новый Структура("Ключ2", ПараметрыСтроки);
	
	ОткрытьФорму("Справочник.LM_ФизЛица.Форма.ФормаЭлемента",Пар,ЭтотОбъект,ЭтаФорма.УникальныйИдентификатор,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Функция ОткрытьВзаиморасчетыНаСервере()
	
	КомпоновщикНастроек = Отчеты.LM_Взаиморасчеты.Создать().КомпоновщикНастроек; 
	Настройки 			= КомпоновщикНастроек.Настройки; 
	
	ЭлементНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")); 
	//ЭлементНастройки.Значение.ДатаНачала    = '00010101';//НачалоГода(ТекущаяДата());
	//ЭлементНастройки.Значение.ДатаОкончания = '00010101';//КонецГода(ТекущаяДата());
	Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда 
			//ПользовательскийПараметр.Значение = ЭлементНастройки.Значение;
			ПользовательскийПараметр.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	Если Объект.ЭтоПедагог Тогда
		ОтборФизЛицо = Новый ПолеКомпоновкиДанных("Педагог");
	Иначе   		
		ОтборФизЛицо = Новый ПолеКомпоновкиДанных("Клиент");
		//ОтборПериод = Новый ПолеКомпоновкиДанных("Период");
	КонецЕсли;

	
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл 
		Если ЭлементНастройки.ЛевоеЗначение = ОтборФизЛицо Тогда 
			ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементНастройки.ПравоеЗначение = Объект.Ссылка; 
			ЭлементНастройки.Использование = Истина; 
			Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
				ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
				Если ТипЗнч(ПользовательскийПараметр) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
					ПользовательскийПараметр.ВидСравнения = ЭлементНастройки.ВидСравнения; 
					ПользовательскийПараметр.ПравоеЗначение = ЭлементНастройки.ПравоеЗначение; 
					ПользовательскийПараметр.Использование = ЭлементНастройки.Использование; 
				КонецЕсли; 
			КонецЕсли;
			Прервать; 
		КонецЕсли; 
	КонецЦикла; 
	
	ПараметрыОткрытия = Новый Структура(); 
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина); 
	ПараметрыОткрытия.Вставить("Вариант", Настройки); 
	ПараметрыОткрытия.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки); 
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьВзаиморасчеты(Команда)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда		
		ПараметрыОткрытия = ОткрытьВзаиморасчетыНаСервере();
		ОткрытьФорму("Отчет.LM_Взаиморасчеты.Форма", ПараметрыОткрытия, ЭтаФорма);
	Иначе
		ОткрытьФорму("Отчет.LM_Взаиморасчеты.Форма", , ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

/////Цвет
&НаКлиенте
Процедура ПриНажатииКнопкиВыборЦвета(Команда)
	
	Кнопка = ЭтаФорма.ТекущийЭлемент;
	
	Обработчик = Новый ОписаниеОповещения("ПриВыбореWebЦвета", ЭтаФорма);
	Режим = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ДопПарам = Новый Структура("ИмяКнопки", Кнопка.Имя);
	
	//Форма текущей демо обработки
	ОткрытьФорму("Обработка.LM_ВыборWebЦвета.Форма.ПалитраWebЦветовУправляемая", ДопПарам,,,,, Обработчик, Режим);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВыбореWebЦвета(ВыбраныйWebЦвет, ДополнительныеПараметры) Экспорт
	
	//Обработка выбора цветв
	Если НЕ ВыбраныйWebЦвет = Неопределено Тогда
		ИмяКнопки = ЭтаФорма.ТекущийЭлемент.Имя;
		Элементы[ИмяКнопки].ЦветФона  = ВыбраныйWebЦвет;
		Элементы[ИмяКнопки].Заголовок = ВыбраныйWebЦвет;
		Попытка
			ВыбЦвет = Сред(ВыбраныйWebЦвет,0,Найти(ВыбраныйWebЦвет,"(")-2);
			ВыбЦвет = СтрЗаменить(ВыбЦвет,"-","");
			ВыбЦвет = СтрЗаменить(ВыбЦвет," ","");
			Объект.Цвет = ВыбЦвет;
		Исключение
			Объект.Цвет = ВыбраныйWebЦвет; 
		КонецПопытки;
	КонецЕсли; 
	
КонецПроцедуры
/////Цвет

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	ОбновитьВидимостьЭлементов(); 	
КонецПроцедуры

&НаКлиенте
Процедура ВозрастПриИзменении(Элемент)
	Объект.ДатаРождения = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраница2 Тогда
		
		Если Объект.Ссылка.Пустая() Тогда
			Кл = Неопределено;
		Иначе
			Кл = Объект.Ссылка;	
		КонецЕсли;
		
		Если Объект.ЭтоПедагог Тогда
			Элементы.ДокументыПедагога.Видимость = Истина;
			Элементы.Документы.Видимость = Ложь;
			ДокументыПедагога.Параметры.УстановитьЗначениеПараметра("Педагог", Кл);
		Иначе
			Элементы.ДокументыПедагога.Видимость = Ложь;
			Элементы.Документы.Видимость = Истина;
			Документы.Параметры.УстановитьЗначениеПараметра("Клиент", Кл);
		КонецЕсли;
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДиаграмму()
	
	Диаграмма.Очистить();
	ДиаграммаПедагог.Очистить();
	
	Запрос = Новый Запрос;
	
	Если Объект.ЭтоПедагог Тогда
		
		Элементы.Диаграмма.Видимость = Ложь;
		Элементы.ДиаграммаПедагог.Видимость = Истина;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	LM_РасчетыПоЗарплатеОстаткиИОбороты.Регистратор КАК Урок,
		|	LM_РасчетыПоЗарплатеОстаткиИОбороты.СуммаОборот КАК СуммаНачисления,
		|	ВЫБОР
		|		КОГДА LM_РасчетыПоЗарплатеОстаткиИОбороты.Регистратор.Сумма ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ LM_РасчетыПоЗарплатеОстаткиИОбороты.Регистратор.Сумма
		|	КОНЕЦ КАК СуммаУрока,
		|	LM_РасчетыПоЗарплатеОстаткиИОбороты.Регистратор.Дата КАК ДатаУрока,
		|	LM_РасчетыПоЗарплатеОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
		|ИЗ
		|	РегистрНакопления.LM_РасчетыПоЗарплате.ОстаткиИОбороты(, , Регистратор, , ) КАК LM_РасчетыПоЗарплатеОстаткиИОбороты
		|ГДЕ
		|	LM_РасчетыПоЗарплатеОстаткиИОбороты.Педагог = &Педагог
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаУрока
		|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Педагог", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();    	
		Уроки = РезультатЗапроса.Выбрать();
		
		Серия = ДиаграммаПедагог.Серии.Добавить();
		Серия.Значение = Объект.Ссылка;
		Серия.Текст = "Стоимость урока";
		
		Серия = ДиаграммаПедагог.Серии.Добавить();
		Серия.Значение = Объект.Ссылка;
		Серия.Текст = "Начислено";
		
		//Серия = ДиаграммаПедагог.Серии.Добавить();
		//Серия.Значение = Объект.Ссылка;
		//Серия.Текст = "Цена урока";
		//
		//Серия = ДиаграммаПедагог.Серии.Добавить();
		//Серия.Значение = Объект.Ссылка;
		//Серия.Текст = "К оплате";
		
		Пока Уроки.Следующий() Цикл
			
			Точка = ДиаграммаПедагог.Точки.Добавить();
			Точка.Значение 		= Уроки.Урок;
			Точка.Расшифровка 	= Уроки.Урок;
			Точка.Текст		 	= Уроки.Урок;
	
			ДиаграммаПедагог.УстановитьЗначение(Точка,ДиаграммаПедагог.Серии[0],Уроки.СуммаУрока,Уроки.Урок);
			ДиаграммаПедагог.УстановитьЗначение(Точка,ДиаграммаПедагог.Серии[1],Уроки.СуммаНачисления,Уроки.Урок);
			//ДиаграммаПедагог.УстановитьЗначение(Точка,ДиаграммаПедагог.Серии[2],Уроки.СуммаНачисления+Уроки.СуммаУрока,Уроки.Урок);
			//ДиаграммаПедагог.УстановитьЗначение(Точка,ДиаграммаПедагог.Серии[3],Уроки.СуммаКонечныйОстаток,Уроки.Урок);
		КонецЦикла;   	
		
	Иначе
		
		Элементы.Диаграмма.Видимость = Истина;
		Элементы.ДиаграммаПедагог.Видимость = Ложь;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	-LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	-LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Регистратор КАК Регистратор,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Регистратор.Дата КАК РегистраторДата
		|ИЗ
		|	РегистрНакопления.LM_СписанияСуммЗаУроки.ОстаткиИОбороты(, , Авто, , ) КАК LM_СписанияСуммЗаУрокиОстаткиИОбороты
		|ГДЕ
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Клиент = &Клиент
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегистраторДата
		|АВТОУПОРЯДОЧИВАНИЕ";
		Запрос.УстановитьПараметр("Клиент", Объект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();    	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Серия = Диаграмма.Серии.Добавить();
		Серия.Значение = Объект.Ссылка;
		Серия.Текст = "Долг";
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Точка = Диаграмма.Точки.Добавить();
			Точка.Значение = ВыборкаДетальныеЗаписи.Регистратор;
			Точка.Расшифровка = ВыборкаДетальныеЗаписи.Регистратор;
			Точка.Текст = ВыборкаДетальныеЗаписи.Регистратор;
			
			Диаграмма.УстановитьЗначение(Точка,Серия,ВыборкаДетальныеЗаписи.СуммаКонечныйОстаток,ВыборкаДетальныеЗаписи.Регистратор);
		КонецЦикла;   	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЭтоПедагогПриИзменении(Элемент)	
	ОбновитьВидимостьЭлементов();	
КонецПроцедуры

Процедура ОбновитьВидимостьЭлементов()
	
	Если ЗначениеЗаполнено(Объект.Цвет) Тогда
		Элементы.ПриНажатииКнопкиВыборЦвета.ЦветФона = WebЦвета[Объект.Цвет];
	КонецЕсли;
	
	ЗаполнитьДиаграмму();
	
	Если Объект.ЭтоПедагог Тогда		
		Элементы.Родитель.Видимость = Ложь;
		Элементы.ГруппаГруппыОбучения.Видимость = Ложь;
		Элементы.СтавкаПедагога.Видимость = Истина; 		
	Иначе
		Элементы.Родитель.Видимость = Истина;
		Элементы.ГруппаГруппыОбучения.Видимость = Истина;
		Элементы.СтавкаПедагога.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

