
&НаКлиенте
Процедура Активировать(Команда)
	
	Объект.Активный = НЕ Объект.Активный;
	
	Если Объект.Активный Тогда
		Объект.ДатаАктивации = ТекущаяДата();	
	КонецЕсли;
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Приостановить(Команда)
	
	Если Объект.Активный Тогда
		
		Если НЕ Объект.Приостановка Тогда
			ОП = Новый ОписаниеОповещения("ЗапросДнейПриостановки",ЭтотОбъект);
			ОткрытьФорму("Справочник.LM_Абонемент.Форма.ФормаПриостановки",,ЭтотОбъект,,,,ОП,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе
			Объект.Приостановка = Ложь;
			Объект.ДатаИзменения = ТекущаяДата();
			Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросДнейПриостановки(Результат,Параметры) Экспорт 
	
	Если Результат.СрокПриостановки <> 0 Тогда
		
		НовСтр = Объект.Приостановки.Добавить();
		НовСтр.СрокПриостановки		= Результат.СрокПриостановки;
		НовСтр.ДатаИзменения 		= ТекущаяДата();
		НовСтр.ДатаПриостановки 	= ТекущаяДата();
		НовСтр.ДатаВозобновления 	= НачалоДня(ТекущаяДата()) + (Результат.СрокПриостановки * 60 * 60 * 24);
		НовСтр.Комментарий 			= Результат.Причина;
		
		Объект.ДатаВозобновления	= НовСтр.ДатаВозобновления;
		Объект.ДатаИзменения		= НовСтр.ДатаИзменения;
		Объект.СрокПриостановки		= НовСтр.СрокПриостановки;
		Объект.Приостановка 		= Истина;
		Объект.ДатаПриостановки 	= ТекущаяДата();
		
		Записать();	

	КонецЕсли;
	
	ОбновитьВидимость();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		ЗаполнитьТЗОплат();
	КонецЕсли;	
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Элементы.Период.ТолькоПросмотр = Истина;
	Иначе
		Элементы.Период.ТолькоПросмотр = Ложь;;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ЦенаАбонемента) Тогда
		Элементы.ЦенаАбонемента.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ЦенаАбонемента.ТолькоПросмотр = Ложь;;
	КонецЕсли;	
	
	Период.ДатаНачала 	 = Объект.ДатаНачала;
	Период.ДатаОкончания = Объект.ДатаОкончания;
	
	Если Объект.Активный Тогда
		
		Элементы.Приостановить.Доступность 		= Истина;
		
		Элементы.Активировать.Заголовок 		= "Сделать неактивным";
		Элементы.Активировать.ЦветФона 			= WebЦвета.ТусклоРозовый;
		
		Если Объект.Приостановка Тогда
			Элементы.Группа8.Доступность 			= Истина;
			Элементы.Приостановить.Заголовок 		= "Возобновить";
			Элементы.ДекорацияСтатус.Заголовок 		= "Приостановлен до " +Формат(Объект.ДатаВозобновления,"ДФ=dd.MM.yyyy");
			Элементы.ДекорацияСтатус.ЦветФона 		= WebЦвета.СветлоСерый;
		Иначе
			Элементы.Группа8.Доступность 			= Ложь;
			Элементы.ДекорацияСтатус.Заголовок 		= "Активен";
			Элементы.ДекорацияСтатус.ЦветФона 		= WebЦвета.ЗеленоватоЖелтый;
			Элементы.Приостановить.Заголовок 		= "Приостановить";
		КонецЕсли;
	Иначе
		Элементы.Активировать.Заголовок 		= "Активировать";
		Элементы.Активировать.ЦветФона 			= WebЦвета.ЗеленоватоЖелтый;
		Элементы.ДекорацияСтатус.Заголовок 		= "Неактивен";
		Элементы.ДекорацияСтатус.ЦветФона 		= WebЦвета.СветлоСерый;
		Элементы.Приостановить.Доступность 		= Ложь;
	КонецЕсли;
	
	ПоказатьФото();
	
КонецПроцедуры

Процедура ЗаполнитьТЗОплат()
	
	Оплачено 		= 0;
	Израсходовано 	= 0;
	Остаток 		= 0;
	ИтогоЧасов 		= 0;
	Элементы.Декорация3.Заголовок = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаКонечныйОстаток КАК Остаток,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Регистратор КАК Документ,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.ПериодДень КАК Дата,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаОборот КАК Сумма,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Клиент КАК Ученик,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаРасход КАК СуммаРасход,
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.ЧасыРасход / 60 / 60 КАК ЧасыРасход,
		|	ВЫБОР
		|		КОГДА LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаРасход > 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Посещений
		|ИЗ
		|	РегистрНакопления.LM_СписанияСуммЗаУроки.ОстаткиИОбороты(&ДатаНачала, &ДатаОкончания, Авто, , ) КАК LM_СписанияСуммЗаУрокиОстаткиИОбороты
		|ГДЕ
		|	LM_СписанияСуммЗаУрокиОстаткиИОбороты.Абонемент = &Абонемент
		|	И LM_СписанияСуммЗаУрокиОстаткиИОбороты.СуммаОборот <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ученик,
		|	Дата
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Абонемент", Объект.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончания);
	
	ВремТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ВремТЗ.Количество()<> 0 Тогда		    
		Оплачено 		= ВремТЗ.Итог("СуммаПриход"); //ВремТЗ[ВремТЗ.Количество()-1].Остаток;
		Израсходовано 	= -ВремТЗ.Итог("СуммаРасход");
		Остаток 		= Оплачено+Израсходовано;
		ИтогоЧасов 		= ВремТЗ.Итог("ЧасыРасход");
		ИтогоПосещений	= ВремТЗ.Итог("Посещений");
		
		Если ЗначениеЗаполнено(Объект.ЦенаАбонемента) и Оплачено >= Объект.ЦенаАбонемента Тогда
			Элементы.Декорация3.Заголовок = "Оплачен полностью";
			Элементы.Декорация3.ЦветТекста = WebЦвета.ТемноЗеленый;
		ИначеЕсли ЗначениеЗаполнено(Объект.ЦенаАбонемента) и Оплачено < Объект.ЦенаАбонемента Тогда
			Элементы.Декорация3.Заголовок = "осталось оплатить " +Формат(Объект.ЦенаАбонемента - Оплачено,"ЧДЦ=2");
			Элементы.Декорация3.ЦветТекста = WebЦвета.ТемноОранжевый;
		КонецЕсли;
	
	КонецЕсли;  	
	
	ТЗОплат.Загрузить(ВремТЗ);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФизЛицо(Команда)
	Элементы.ФизЛицо.ТолькоПросмотр = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала = Период.ДатаНачала;
	Объект.ДатаОкончания = Период.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПериод(Команда)
	Элементы.Период.ТолькоПросмотр = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОплаченоНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = ОткрытьВзаиморасчетыНаСервере(Объект.Ссылка);
	ОткрытьФорму("Отчет.LM_Взаиморасчеты.Форма", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ОткрытьВзаиморасчетыНаСервере(Значение)
	
	КомпоновщикНастроек = Отчеты.LM_Взаиморасчеты.Создать().КомпоновщикНастроек; 
	Настройки 			= КомпоновщикНастроек.Настройки; 
	
	ЭлементНастройки = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")); 
	Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
		ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
		Если ТипЗнч(ПользовательскийПараметр) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда 
			ПользовательскийПараметр.Использование = Ложь;
		КонецЕсли; 
	КонецЕсли; 
	
	ОтборАбонемент = Новый ПолеКомпоновкиДанных("Абонемент");
	
	Для Каждого ЭлементНастройки Из Настройки.Отбор.Элементы Цикл 
		Если ЭлементНастройки.ЛевоеЗначение = ОтборАбонемент Тогда 
			ЭлементНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 
			ЭлементНастройки.ПравоеЗначение = Значение; 
			ЭлементНастройки.Использование = Истина; 
			Если ЗначениеЗаполнено(ЭлементНастройки.ИдентификаторПользовательскойНастройки) Тогда 
				ПользовательскийПараметр = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки); 
				Если ТипЗнч(ПользовательскийПараметр) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
					ПользовательскийПараметр.ВидСравнения = ЭлементНастройки.ВидСравнения; 
					ПользовательскийПараметр.ПравоеЗначение = ЭлементНастройки.ПравоеЗначение; 
					ПользовательскийПараметр.Использование = ЭлементНастройки.Использование; 
				КонецЕсли; 
			КонецЕсли;
			Прервать; 
		КонецЕсли; 
	КонецЦикла; 
	
	ПараметрыОткрытия = Новый Структура(); 
	ПараметрыОткрытия.Вставить("СформироватьПриОткрытии", Истина); 
	ПараметрыОткрытия.Вставить("Вариант", Настройки); 
	ПараметрыОткрытия.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки); 
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

&НаКлиенте
Процедура ФизЛицоПриИзменении(Элемент)
	ПоказатьФото();
КонецПроцедуры

&НаСервере
Процедура ПоказатьФото()
	Если НЕ Объект.ФизЛицо.Пустая() и НЕ Объект.ФизЛицо.Фото.Пустая() Тогда
		Фото = ПоместитьВоВременноеХранилище(Объект.ФизЛицо.Фото.Файл.Получить());
	Иначе
		Фото = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СрокПриостановкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаПриостановки) и Объект.СрокПриостановки <> 0 Тогда
		Объект.ДатаВозобновления = НачалоДня(Объект.ДатаПриостановки) + (Объект.СрокПриостановки * 60 * 60 * 24);
	Иначе
		Объект.ДатаВозобновления = Неопределено;
	КонецЕсли;
	
	Объект.ДатаИзменения = ТекущаяДата();
	
	ОбновитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВозобновленияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаПриостановки) и ЗначениеЗаполнено(Объект.ДатаВозобновления) Тогда
		Объект.СрокПриостановки = -(НачалоДня(Объект.ДатаПриостановки) - НачалоДня(Объект.ДатаВозобновления)) / 86400;
	Иначе
		Объект.СрокПриостановки = 0;
	КонецЕсли;
	
	Объект.ДатаИзменения = ТекущаяДата();
	
	ОбновитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЦенуАбонемента(Команда)
	Элементы.ЦенаАбонемента.ТолькоПросмотр = Ложь;
КонецПроцедуры
